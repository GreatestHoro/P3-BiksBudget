@using BBCollection.BBObjects
@using BBCollection.DBHandling
<ListGroupItem>
    <Field IsHorizontal="true" Padding="Padding.IsAuto.OnAll">
        <FieldBody ColumnSize="ColumnSize.IsFull">
                <Table IsBorderless="true" IsFullWidth="true" IsHoverable="true">
                    <TableBody>
                        <TableRow Style="vertical-align:middle;">
                            <TableRowCell Style="width:50px">
                                <FieldBody>
                                    <CheckEdit Checked="@Product._completed" CheckedChanged="@OnCheckedChanged" />
                                </FieldBody>
                            </TableRowCell>
                            <TableRowCell Background="Background.White" Style="vertical-align:middle; width: 110px">
                                @if (Product._image.Length == 0)
                                {
                                    <FigureImage Source="https://cdn.discordapp.com/attachments/519096261408718908/649685312083197973/coopdicoop.jpg" />
                                }
                                else
                                {
                                    <FigureImage Source="@Product._image" />
                                }
                            </TableRowCell>
                            <TableRowCell Style="vertical-align:middle; width: 200px">
                                <Text Float="Float.Left"> @Product._productName</Text>
                                <Text Color="TextColor.Muted" Float="Float.Left" Style="vertical-align:sub;"> @Product._amount</Text>
                            </TableRowCell>
                            <TableRowCell Style="width:110px; vertical-align:middle">
                                <SelectEdit TValue="int" SelectedValue="selectedValue" SelectedValueChanged="OnSelectedValueChanged" Style="width:100px;">
                                    @{
                                        int numb = 0;
                                        @for (int i = 0; i < 99; i++)
                                        {
                                            <SelectItem Value="TempScalar">@(++numb)</SelectItem>
                                        }
                                    }
                                </SelectEdit>
                            </TableRowCell>
                            <TableRowCell Style="width:200px; vertical-align:middle">
                                <Text Style="vertical-align:middle;" Color="TextColor.Success">@Product._price DKK</Text>
                                <Text Style="vertical-align:sub; width:200px" Color="TextColor.Muted">@GetTotalPrice()</Text>
                            </TableRowCell>
                        </TableRow>
                    </TableBody>
                </Table>
        </FieldBody>
    </Field>
</ListGroupItem>

@code {
    public int selectedValue;
    public int scalar;
    public string TempScalar;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            selectedValue = Product._amountleft;
            StateHasChanged();
        }

    }

    public void OnCheckedChanged(bool isChecked)
    {
        Product._saveProduct = true;
        Product._completed = isChecked;

        StatusChanged?.Invoke(isChecked);
    }

    public void OnAmountChange()
    {
        StatusChanged?.Invoke(true);
    }

    public void OnSelectedValueChanged(int value)
    {
        selectedValue = value;
        Product._amountleft = selectedValue;
        OnAmountChange();
    }

    public string GetTotalPrice()
    {
        if (Product._amountleft > 1)
        {
            return "subtotal " + String.Format("{0:0.00}", Product._price * Product._amountleft) + " DKK";
        }
        else
        {
            return "";
        }
    }

    [Parameter] public Product Product { get; set; }

    [Parameter] public Action<bool> StatusChanged { get; set; }
}
