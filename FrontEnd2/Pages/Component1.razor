@*@page "/shoppinglist"


@using Newtonsoft.Json;
@using FrontEnd2.Data;

@inject HttpClient Http

<div class="container">
    <table id="cart" class="table table-hover table-condensed">
        <thead>
            <tr>
                <th style="width:50%">Product</th>
                <th style="width:10%">Price</th>
                <th style="width:8%">Quantity</th>
                <th style="width:22%" class="text-center">Subtotal</th>
                <th style="width:10%"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in ListFunc.itemList)
            {

                <tr>
                    <td data-th="Product">
                        <div class="row">
                            <div class="col-sm-2 hidden-xs"><img src="http://placehold.it/100x100" class="img-responsive" /></div>
                            <div class="col-sm-10">
                                <h4 class="nomargin">@item.Name</h4>
                                <p> Description</p>
                            </div>
                        </div>
                    </td>
                    <td data-th="Price">@item.Price</td>
                    <td data-th="Quantity">
                        <input type="number" class="form-control text-center" value="@ammount">
                    </td>
                    <td data-th="Subtotal" class="text-center">subtotal</td>
                    <td class="actions" data-th="">
                        <button class="btn btn-info btn-sm"><i class="oi oi-reload"></i></button>
                        <button class="btn btn-danger btn-sm"><i class="oi oi-trash"></i></button>
                    </td>
                </tr>
            }
        </tbody>
        <tfoot>
            <tr class="visible-xs">
                <td class="text-center"><strong>Total 1.99</strong></td>
            </tr>
            <tr>
                <td colspan="2" class="hidden-xs"></td>
                <td class="hidden-xs text-center"><strong>Total $1.99</strong></td>
                <td><a href="#" class="btn btn-success btn-block">Save Shopping list </a></td>
            </tr>
        </tfoot>
    </table>
</div>

<p>@ammount</p>

@code {

    string productString;
    string newProduct;
    ShoppinlistFunctionality ListFunc = new ShoppinlistFunctionality("api/Shoppinglist");
    HttpResponseMessage responseMessage = new HttpResponseMessage();
    int ammount;

    protected void IncrementAmount(int id)
    {
        foreach (var item in ListFunc.itemList)
        {
            if (item.Id == id)
            {
                item.AmountOfItem++;
            }
        }
    }

    protected void DecrementAmount(int id)
    {
        foreach (var item in ListFunc.itemList)
        {

            if (item.Id == id && item.AmountOfItem > 0)
            {
                item.AmountOfItem--;
            }
        }
    }

    protected async override Task OnInitializedAsync()
    {
        responseMessage = await ListFunc.GetProductsOnStart();
    }

    private void AddAlltoStorage()
    {
        foreach (var item in ListFunc.itemList)
        {
            ListFunc.AddProductToStorage(item.Id, "api/Storage");
        }
        ListFunc.itemList.Clear();
    }

    private void DeleteAll()
    {
        //This needs to go to backend
        ListFunc.itemList.Clear();
    }

    private async void AddProduct()
    {
        CoopProduct newItem = new CoopProduct() { Navn = newProduct, Navn2 = "", Pris = 0.00 };

        newProduct = string.Empty;

        responseMessage = await ListFunc.AddProductToList(newItem.Navn, newItem.Navn2, newItem.Pris);
    }

    private async void DeleteProduct(int id)
    {
        responseMessage = await ListFunc.DeleteProduct(id);
    }

    private async void AddProductToStorage(int id)
    {
        ListFunc.AddProductToStorage(id, "api/Storage");
        responseMessage = await ListFunc.DeleteProduct(id);

        //ListFunc.itemList.Remove(ListFunc.itemList.First(x => x.Id == id));
    }

    private async void SaveList()
    {
        productString = JsonConvert.SerializeObject(ListFunc.itemList);

        string stuff = await Http.GetStringAsync("https://localhost:44325/api/Shoppinglist/5/" + productString);


        //await Http.PostAsync("https://localhost:44325/api/Shoppinglist/save" + productString, new StringContent(productString));

        //var stringContent = new StringContent(productString);

        //HttpResponseMessage result = await Http.PostAsync("https://localhost:44325/api/Save", stringContent);
    }

}*@
