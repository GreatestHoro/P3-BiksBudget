@page "/Emptyfridge"
@using Newtonsoft.Json;
@inject HttpClient Http
@using FrontEnd2.Data;
@using System.Text;
@using System.Globalization;
@using BBCollection.BBObjects;
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject AuthenticationFunctionallity uf

<h3>Emptyfridge</h3>

@code {
    ShoppinlistFunctionality ListFunc = new ShoppinlistFunctionality("api/Storage");
    HttpResponseMessage responseMessage = new HttpResponseMessage();
    String email;
    String userId;


    protected async override Task OnInitializedAsync()
    {
        userId = email;
        responseMessage = await ListFunc.GetProductsOnStart(userId);
        //ListFunc.itemList;
        }

    List<Recipe> FindValidRecipies(List<AddedProduct> storageInventory)
    {

        return null;
    }

    public List<Recipe> GetRecipes()
    {
        //return new List<Recipe>() { new Recipe(1,"yeet","yoot",); }
        return null;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await GetLocalSession();
            localStorage.Changed += (sender, e) =>
            {
                Console.WriteLine($"Value for key {e.Key} changed from {e.OldValue} to {e.NewValue}");
            };

            //if (email != null)
            //{
            //    gottenData = await Http.GetStringAsync("https://localhost:44325/api/Login/" + email + "S");
            //}
            StateHasChanged();
        }

    }

    async Task GetLocalSession()
    {
        email = await localStorage.GetItemAsync<string>("Email");
    }
}
